name: school-news-letter
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: TypeScript check
        run: npx tsc --noEmit

  build:
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Set .env file
        run: |
          echo "EDGE_CONFIG_ID=abc1" >> .env
          echo "VERCEL_TEAM_ID=abc12" >> .env
          echo "VERCEL_API_TOKEN=abc123" >> .env
          echo "SECRET_KEY=abcdefghijklmnopqrstuvwxyz123456" >> .env
          echo "JWT_SECRET_KEY=abc1234" >> .env

      - name: Build
        run: npm run build

      - name: Bump version and commit
        run: |
          # Configure git to use GitHub Actions
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Determine version update type
          if echo "${{ github.event.head_commit.message }}" | grep -q "#major"; then
            VERSION_TYPE="major"
          elif echo "${{ github.event.head_commit.message }}" | grep -q "#minor"; then
            VERSION_TYPE="minor"
          else
            VERSION_TYPE="patch"
          fi

          # Bump version
          npm version $VERSION_TYPE --no-git-tag-version

          # Make a commit
          git add package.json package-lock.json
          git commit -m "[BOT] Version bump to: $(cat package.json | jq -r .version)"

          # Push commit without triggering a new build
          git push origin HEAD:$GITHUB_REF
