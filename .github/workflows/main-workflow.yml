name: school-news-letter
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - main
permissions:
  contents: write
jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          echo "::add-path::$HOME/.bun/bin"
      - name: Install dependencies
        run: bun install
      - name: TypeScript check
        run: bun run tsc --noEmit
  build:
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          echo "::add-path::$HOME/.bun/bin"
      - name: Install dependencies
        run: bun install
      - name: Build
        run: bun run build
      - name: Bump version and commit
        run: |
          # Configure git to use GitHub Actions
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # Determine version update type
          if echo "${{ github.event.head_commit.message }}" | grep -q "#major"; then
            VERSION_TYPE="major"
          elif echo "${{ github.event.head_commit.message }}" | grep -q "#minor"; then
            VERSION_TYPE="minor"
          else
            VERSION_TYPE="patch"
          fi
          # Bump version
          bun run version $VERSION_TYPE --no-git-tag-version
          # Make a commit
          git add package.json bun.lockb
          git commit -m "[BOT] Version bump to: $(cat package.json | jq -r .version)"
          # Push commit without triggering a new build
          git push origin HEAD:$GITHUB_REF
